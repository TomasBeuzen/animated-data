{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# k-Nearest Neighbors"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "k-nearest neighbors (*kNN*) is..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Animation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import plotly.io as pio\n",
    "import plotly.express as px\n",
    "import plotly.offline as py\n",
    "pio.renderers.default = \"notebook\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "tags": [
     "hide-input"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>X1</th>\n",
       "      <th>X2</th>\n",
       "      <th>Y</th>\n",
       "      <th>Distance</th>\n",
       "      <th>Predicted Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>Unknown</td>\n",
       "      <td>0</td>\n",
       "      <td>Unknown</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>Class 1</td>\n",
       "      <td>5</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>Class 1</td>\n",
       "      <td>13</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>Class 2</td>\n",
       "      <td>13</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Class 1</td>\n",
       "      <td>16</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>Class 2</td>\n",
       "      <td>25</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Class 2</td>\n",
       "      <td>26</td>\n",
       "      <td>Class 1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>Class 2</td>\n",
       "      <td>29</td>\n",
       "      <td>Class 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>Class 2</td>\n",
       "      <td>34</td>\n",
       "      <td>Class 2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>Class 1</td>\n",
       "      <td>61</td>\n",
       "      <td>Class 2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   X1  X2        Y  Distance Predicted Class\n",
       "9   6   3  Unknown         0         Unknown\n",
       "2   8   2  Class 1         5         Class 1\n",
       "4   8   6  Class 1        13         Class 1\n",
       "6   9   5  Class 2        13         Class 1\n",
       "1   2   3  Class 1        16         Class 1\n",
       "3   2   6  Class 2        25         Class 1\n",
       "7   1   2  Class 2        26         Class 1\n",
       "0   1   5  Class 2        29         Class 2\n",
       "5   3   8  Class 2        34         Class 2\n",
       "8   1   9  Class 1        61         Class 2"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.random.seed(11)\n",
    "df = pd.DataFrame({'X1': np.random.randint(1, 10, 9),\n",
    "                   'X2': np.random.randint(1, 10, 9),\n",
    "                    'Y': np.random.choice(['Class 2', 'Class 1'], size=9)})\n",
    "df.loc[len(df)] = [6, 3, 'Unknown'] # query point\n",
    "df['Distance'] = ((df[['X1', 'X2']] - df.iloc[-1, :2]) ** 2).sum(axis=1) # distances from query point\n",
    "df = df.sort_values(by='Distance')\n",
    "df['Predicted Class'] = ['Unknown', 'Class 1', 'Class 1', 'Class 1', 'Class 1', 'Class 1', 'Class 1', 'Class 2', 'Class 2', 'Class 2']\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": false,
    "tags": [
     "hide-input"
    ]
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "        \n",
       "        \n",
       "            <div id=\"83f03eff-0d7f-4dc2-ae77-7e3aad33b625\" class=\"plotly-graph-div\" style=\"height:520px; width:650px;\"></div>\n",
       "            <script type=\"text/javascript\">\n",
       "                require([\"plotly\"], function(Plotly) {\n",
       "                    window.PLOTLYENV=window.PLOTLYENV || {};\n",
       "                    \n",
       "                if (document.getElementById(\"83f03eff-0d7f-4dc2-ae77-7e3aad33b625\")) {\n",
       "                    Plotly.newPlot(\n",
       "                        '83f03eff-0d7f-4dc2-ae77-7e3aad33b625',\n",
       "                        [{\"hovertemplate\": \"Y=Unknown<br>X1=%{x}<br>X2=%{y}<extra></extra>\", \"legendgroup\": \"Unknown\", \"marker\": {\"color\": \"#7F7F7F\", \"line\": {\"width\": 1}, \"size\": 20, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Unknown\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [6], \"xaxis\": \"x\", \"y\": [3], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Y=Class 1<br>X1=%{x}<br>X2=%{y}<extra></extra>\", \"legendgroup\": \"Class 1\", \"marker\": {\"color\": \"#636EFA\", \"line\": {\"width\": 1}, \"size\": 20, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Class 1\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [8, 8, 2, 1], \"xaxis\": \"x\", \"y\": [2, 6, 3, 9], \"yaxis\": \"y\"}, {\"hovertemplate\": \"Y=Class 2<br>X1=%{x}<br>X2=%{y}<extra></extra>\", \"legendgroup\": \"Class 2\", \"marker\": {\"color\": \"#EF553B\", \"line\": {\"width\": 1}, \"size\": 20, \"symbol\": \"circle\"}, \"mode\": \"markers\", \"name\": \"Class 2\", \"showlegend\": true, \"type\": \"scatter\", \"x\": [9, 2, 1, 1, 3], \"xaxis\": \"x\", \"y\": [5, 6, 2, 5, 8], \"yaxis\": \"y\"}],\n",
       "                        {\"annotations\": [{\"align\": \"left\", \"showarrow\": false, \"text\": \"k = \", \"x\": 0, \"xref\": \"paper\", \"y\": 1.105, \"yref\": \"paper\"}], \"font\": {\"size\": 20}, \"height\": 520, \"legend\": {\"title\": {\"text\": \"Y\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"updatemenus\": [{\"buttons\": [{\"args\": [{\"shapes\": []}], \"label\": \"0\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"1\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"2\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"3\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"4\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"5\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#636EFA\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"6\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#EF553B\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"7\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 3, \"x1\": 6, \"xref\": \"x\", \"y0\": 8, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#EF553B\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"8\", \"method\": \"relayout\"}, {\"args\": [{\"shapes\": [{\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 8, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 9, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 3, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 2, \"x1\": 6, \"xref\": \"x\", \"y0\": 6, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 2, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 5, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 3, \"x1\": 6, \"xref\": \"x\", \"y0\": 8, \"y1\": 3, \"yref\": \"y\"}, {\"layer\": \"below\", \"line\": {\"color\": \"Black\", \"width\": 2}, \"type\": \"line\", \"x0\": 1, \"x1\": 6, \"xref\": \"x\", \"y0\": 9, \"y1\": 3, \"yref\": \"y\"}, {\"fillcolor\": \"#EF553B\", \"type\": \"circle\", \"x0\": 5.75, \"x1\": 6.25, \"xref\": \"x\", \"y0\": 2.75, \"y1\": 3.25, \"yref\": \"y\"}]}], \"label\": \"9\", \"method\": \"relayout\"}], \"direction\": \"down\", \"showactive\": true, \"x\": 0.115, \"xanchor\": \"left\", \"y\": 1.11, \"yanchor\": \"top\"}], \"width\": 650, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"range\": [0, 10], \"title\": {\"text\": \"X1\"}}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"range\": [0, 10], \"title\": {\"text\": \"X2\"}}},\n",
       "                        {\"responsive\": true}\n",
       "                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('83f03eff-0d7f-4dc2-ae77-7e3aad33b625');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })\n",
       "                };\n",
       "                });\n",
       "            </script>\n",
       "        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "color_dict = {\"Class 1\": \"#636EFA\", \"Class 2\": \"#EF553B\", \"Unknown\": \"#7F7F7F\"}\n",
    "fig = px.scatter(df, x=\"X1\", y=\"X2\", color='Y', color_discrete_map=color_dict,\n",
    "                 range_x=[0, 10], range_y=[0, 10],\n",
    "                 width=650, height=520)\n",
    "fig.update_traces(marker=dict(size=20,\n",
    "                              line=dict(width=1)))\n",
    "\n",
    "# Add lines\n",
    "shape_dict = {} # create a dictionary\n",
    "for k in range(0, len(df)):\n",
    "    shape_dict[k] = [dict(type=\"line\", xref=\"x\", yref=\"y\",x0=x, y0=y, x1=6, y1=3, layer='below',\n",
    "                          line=dict(color=\"Black\", width=2)) for x, y in df.iloc[1:k+1, :2].to_numpy()]\n",
    "    if k != 0:\n",
    "        shape_dict[k].append(dict(type=\"circle\", xref=\"x\", yref=\"y\",x0=5.75, y0=2.75, x1=6.25, y1=3.25,\n",
    "                                  fillcolor=color_dict[df.iloc[k, 4]]))\n",
    "\n",
    "# Add dropdown\n",
    "fig.update_layout(\n",
    "    updatemenus=[dict(buttons=[dict(args=[{\"shapes\": shape_dict[k]}],\n",
    "                                    label=str(k),\n",
    "                                    method=\"relayout\") for k in range(0, len(df))],\n",
    "                      direction=\"down\", showactive=True,\n",
    "                      x=0.115, xanchor=\"left\", y=1.11, yanchor=\"top\")])\n",
    "\n",
    "# Add dropdown label\n",
    "fig.update_layout(annotations=[dict(text=\"k = \",\n",
    "                                    x=0, xref=\"paper\", y=1.105, yref=\"paper\",\n",
    "                                    align=\"left\", showarrow=False)],\n",
    "                  font=dict(size=20))"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
